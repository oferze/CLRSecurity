//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.20506.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Security.Tools.PartialTrustRunner.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Security.Tools.PartialTrustRunner.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :RUNNER: return: {0}.
        /// </summary>
        internal static string ApplicationExit {
            get {
                return ResourceManager.GetString("ApplicationExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage:.
        /// </summary>
        internal static string CommandLine1 {
            get {
                return ResourceManager.GetString("CommandLine1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Example usage: {0}.exe -af Samples\LibraryDemander.dll -ps LocalIntranet Samples\demander.exe.
        /// </summary>
        internal static string CommandLine10 {
            get {
                return ResourceManager.GetString("CommandLine10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This runs Samples\demander.exe and also makes sure Samples\LibraryDemander.dll is loaded as FullTrust.
        /// </summary>
        internal static string CommandLine11 {
            get {
                return ResourceManager.GetString("CommandLine11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a program designed to run an application in partial trust in an easy and simple way. Under the covers it starts an AppDomain with a permission set and a full trust list and uses this AppDomain to run your application in..
        /// </summary>
        internal static string CommandLine12 {
            get {
                return ResourceManager.GetString("CommandLine12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are creating AppDomains or your application uses a host, you might not be able to use this program. This program is designed to offer an easy solution to those that want to run something in partial trust and don&apos;t care about the intricacies of this endeavor..
        /// </summary>
        internal static string CommandLine13 {
            get {
                return ResourceManager.GetString("CommandLine13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTE: Make sure you are passing any parameters for the runner before passing the name of the program to be sandboxed..
        /// </summary>
        internal static string CommandLine14 {
            get {
                return ResourceManager.GetString("CommandLine14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NOTE: For the xml parameter, the file format is the same as the output of PermissionSet.ToXml. (This is also the format that caspol -lp uses)..
        /// </summary>
        internal static string CommandLine15 {
            get {
                return ResourceManager.GetString("CommandLine15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} [-nro] [-ps NamedPermissionSet]|[-xml ptrunner.xml] [-af fullTrustAssembly] [-url sourceUrl] programName {{program arguments}}.
        /// </summary>
        internal static string CommandLine2 {
            get {
                return ResourceManager.GetString("CommandLine2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters:.
        /// </summary>
        internal static string CommandLine3 {
            get {
                return ResourceManager.GetString("CommandLine3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -nro : No runner output. Stops the runner from printing start and stop messages..
        /// </summary>
        internal static string CommandLine4 {
            get {
                return ResourceManager.GetString("CommandLine4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ps : PermissionSet The standard permission set in which should be used to sandbox the application. This can be any one of: {0}.
        /// </summary>
        internal static string CommandLine5 {
            get {
                return ResourceManager.GetString("CommandLine5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -xml : XmlFile File containing the permission set which should be used to sandbox the application. This permission set takes precedence over the -ps parameter..
        /// </summary>
        internal static string CommandLine6 {
            get {
                return ResourceManager.GetString("CommandLine6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -af AddToFullTrust One assembly that you want in the full trust list. Your full trust assembly must have a strong name signature. See &quot;Strong-Named Assemblies&quot; in MSDN for more information..
        /// </summary>
        internal static string CommandLine7 {
            get {
                return ResourceManager.GetString("CommandLine7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -url : source URL to provide same-site access to in the sandbox.
        /// </summary>
        internal static string CommandLine8 {
            get {
                return ResourceManager.GetString("CommandLine8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to program arguments are arguments for the sandboxed program. The first parameter which does not begin with a &quot;-&quot; is considered to be the path to the program to sandbox. All subsequent parameters are considered to be parameters for the sandboxed program itself..
        /// </summary>
        internal static string CommandLine9 {
            get {
                return ResourceManager.GetString("CommandLine9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :RUNNER: Got exception while parsing command line: &apos;{0}&apos;.
        /// </summary>
        internal static string ErrorParsingCommandLine {
            get {
                return ResourceManager.GetString("ErrorParsingCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled exception thrown from the partial trust application:\n{0}.
        /// </summary>
        internal static string ExceptionLeaked {
            get {
                return ResourceManager.GetString("ExceptionLeaked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: &apos;{0}&apos;.
        /// </summary>
        internal static string GeneralError {
            get {
                return ResourceManager.GetString("GeneralError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PartialTrustRunner is unsigned. This tool must be built with a strong name signature in order to correctly function..
        /// </summary>
        internal static string PartialTrustRunnerUnsigned {
            get {
                return ResourceManager.GetString("PartialTrustRunnerUnsigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :RUNNER: start: &quot;{0}{1}&quot;.
        /// </summary>
        internal static string StartingApplication {
            get {
                return ResourceManager.GetString("StartingApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command line option: &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownOption {
            get {
                return ResourceManager.GetString("UnknownOption", resourceCulture);
            }
        }
    }
}
